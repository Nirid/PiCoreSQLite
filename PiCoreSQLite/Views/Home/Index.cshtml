@using System
@using System.Collections.Generic
@using System.Linq
@model Tuple<System.Collections.Generic.IEnumerable<PiCoreSQLite.Models.Tasks>, System.Collections.Generic.IEnumerable<PiCoreSQLite.Models.AssignedTasks>, System.Collections.Generic.IEnumerable<PiCoreSQLite.Models.CompletedTasks>,PiCoreSQLite.Models.Tasks>

@{
    ViewData["Title"] = "Index";
}


<h2>Index</h2>

<p>
    <a asp-action="AddTasks">Dodaj zadania do wykonania</a>
</p>
<p>
    <a asp-action="AddFinished">Dodaj wykonane zadanie</a>
</p>
<p>
    <a asp-action="Report" asp-route-ticks="@DateTime.Today.Date.Ticks" asp-controller="Home">Wyswietl raport</a>
</p>
<h3>Zadania pozostale do wykonania:</h3>
<table class="table">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Item4.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Item4.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Item4.Difficulty)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Item4.Duration)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Item4.Categories)
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @{
        var zrobione =
            from completed in Model.Item1.Where(t => t.CompletedId == Model.Item3.FirstOrDefault(d => d.Date.Date == DateTime.Today).Id)
            group completed by completed.Categories;
        var zadane =
            from assigned in Model.Item1.Where(t => t.AssignedId == Model.Item2.FirstOrDefault(d => d.Date.Date == DateTime.Today).Id)
            group assigned by assigned.Categories;
        var lista =
            from assigned in zadane
            where assigned.Key != ""
            from ass in assigned
            where ass.Duration.Ticks >= zrobione.Where(s => s.Key == assigned.Key).SelectMany(n => n).Sum(n => n.Duration.Ticks)
            select ass;
 }
    @foreach (var item in lista)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Difficulty)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Duration)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Categories)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
    }
    </tbody>
</table>
<p>
    <a asp-action="List">Lista wszystkich zadan</a>
</p>
